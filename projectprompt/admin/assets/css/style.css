/* Custom CSS variables for theming, using hardcoded values */
:root {
  --radius: 0.5rem;

  /* Light mode colors */
  --background: #ffffff;
  --foreground: #0a0a0a;
  --card: #ffffff;
  --card-foreground: #0a0a0a;
  --popover: #ffffff;
  --popover-foreground: #0a0a0a;
  --primary: #0a0a0a;
  --primary-foreground: #fafafa;
  --secondary: #f2f2f2;
  --secondary-foreground: #0a0a0a;
  --muted: #f2f2f2;
  --muted-foreground: #737373;
  --accent: #f2f2f2;
  --accent-foreground: #0a0a0a;
  --destructive: #ef4444;
  --destructive-foreground: #fafafa;
  --border: #e5e5e5;
  --input: #e5e5e5;
  --ring: #0a0a0a;

  /* Sidebar specific colors */
  --sidebar-background: #f8f8f8;
  --sidebar-foreground: #3d3d3d;
  --sidebar-primary: #0a0a0a;
  --sidebar-primary-foreground: #fafafa;
  --sidebar-accent: #e0e0e0; /* Lighter accent for sidebar hover */
  --sidebar-accent-foreground: #0a0a0a;
  --sidebar-border: #e0e0e0;
  --sidebar-ring: #3b82f6;
}

/* Dark mode colors */
html.dark {
  --background: #1a1a1a;
  --foreground: #fafafa;
  --card: #1a1a1a;
  --card-foreground: #fafafa;
  --popover: #1a1a1a;
  --popover-foreground: #fafafa;
  --primary: #fafafa;
  --primary-foreground: #1a1a1a;
  --secondary: #2a2a2a;
  --secondary-foreground: #fafafa;
  --muted: #2a2a2a;
  --muted-foreground: #8c8c8c;
  --accent: #2a2a2a;
  --accent-foreground: #fafafa;
  --destructive: #dc2626;
  --destructive-foreground: #fafafa;
  --border: #2a2a2a;
  --input: #2a2a2a;
  --ring: #fafafa;

  /* Sidebar specific colors for dark mode */
  --sidebar-background: #0a0a0a; /* Darker background for sidebar */
  --sidebar-foreground: #fafafa;
  --sidebar-primary: #fafafa;
  --sidebar-primary-foreground: #1a1a1a;
  --sidebar-accent: #2a2a2a; /* Darker accent for sidebar hover */
  --sidebar-accent-foreground: #fafafa;
  --sidebar-border: #2a2a2a;
  --sidebar-ring: #3b82f6;
}

/* Base styles for elements, mimicking shadcn/ui components with raw Tailwind */
/* These are applied using @apply in a build process, but for CDN, we define them directly */
/* Note: When using CDN, you cannot use @apply directly in your custom CSS.
   These classes are defined here for clarity and would typically be part of a build step.
   For pure CDN, you'd apply these utility classes directly in your HTML.
   However, for the purpose of demonstrating custom components/variables,
   I'm including them here as if they were pre-compiled. */

/* The following classes are defined to mimic shadcn/ui components.
   When using Tailwind via CDN, you would typically apply these utility classes
   directly in your HTML. For this example, I'm defining them here
   to show how they would be composed if you were using a build process.
   Since we're using CDN, these are effectively just custom CSS classes
   that happen to use Tailwind's color variables. */

.card {
  @apply rounded-lg border border-[var(--border)] bg-[var(--card)] text-[var(--card-foreground)] shadow-sm;
}
.card-header {
  @apply flex flex-col space-y-1.5 p-6;
}
.card-title {
  @apply text-2xl font-semibold leading-none tracking-tight;
}
.card-description {
  @apply text-sm text-[var(--muted-foreground)];
}
.card-content {
  @apply p-6 pt-0;
}
.btn {
  @apply inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-[var(--background)] transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--ring)] focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50;
}
.btn-default {
  @apply bg-[var(--primary)] text-[var(--primary-foreground)] hover:bg-[var(--primary)]/[0.9];
}
.btn-outline {
  @apply border border-[var(--input)] bg-[var(--background)] hover:bg-[var(--accent)] hover:text-[var(--accent-foreground)];
}
.btn-ghost {
  @apply hover:bg-[var(--accent)] hover:text-[var(--accent-foreground)];
}
.btn-icon {
  @apply h-10 w-10;
}
.checkbox {
  @apply peer h-4 w-4 shrink-0 rounded-sm border border-[var(--primary)] ring-offset-[var(--background)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--ring)] focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-[var(--primary)] data-[state=checked]:text-[var(--primary-foreground)];
}
.input {
  @apply border border-[var(--input)] bg-[var(--background)] text-[var(--foreground)] rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[var(--ring)] focus:border-[var(--primary)];
}
.select-trigger {
  @apply flex h-10 w-full items-center justify-between rounded-md border border-[var(--input)] bg-[var(--background)] px-3 py-2 text-sm ring-offset-[var(--background)] placeholder:text-[var(--muted-foreground)] focus:outline-none focus:ring-2 focus-visible:ring-[var(--ring)] focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50;
}
.select-content {
  /* This would typically be handled by JS for dropdowns, but for basic styling */
  @apply relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-[var(--border)] bg-[var(--popover)] text-[var(--popover-foreground)] shadow-md;
}
.select-item {
  /* This would typically be handled by JS for dropdowns, but for basic styling */
  @apply relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-[var(--accent)] focus:text-[var(--accent-foreground)] data-[disabled]:pointer-events-none data-[disabled]:opacity-50;
}

/* Responsive sidebar behavior */
@media (min-width: 768px) {
  #sidebar {
    transform: translateX(0); /* Always visible on desktop */
  }
  #main-content {
    margin-left: 16rem; /* Adjust for sidebar width */
  }
}
